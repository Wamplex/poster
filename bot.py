from aiogram import Bot, Dispatcher
from aiogram.types import Message
import asyncio
import os

# üîê –¢–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = '7780663324:AAFdFeSgNnGMCoyrqMiEiZ78GoBaxozW21I'

# üÜî ID —Ç–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞
REVIEW_CHANNEL_ID = -1002264433388

# üìÅ –§–∞–π–ª —Å–æ —Å—á—ë—Ç—á–∏–∫–æ–º
COUNTER_FILE = 'counter.txt'

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å—á—ë—Ç—á–∏–∫–∞
def load_counter():
    if os.path.exists(COUNTER_FILE):
        with open(COUNTER_FILE, 'r') as f:
            return int(f.read().strip())
    return 1

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞
def save_counter(value):
    with open(COUNTER_FILE, 'w') as f:
        f.write(str(value))

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

review_counter = load_counter()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def handle_message(message: Message):
    global review_counter

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ
    if not message.forward_from and not message.forward_from_chat:
        await message.answer("–ü–µ—Ä–µ—à–ª–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞, —á—Ç–æ–±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ–≥–æ –∫–∞–∫ –æ—Ç–∑—ã–≤.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å
    text = f"–û—Ç–∑—ã–≤ #{review_counter}"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∏ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
    await bot.send_message(chat_id=REVIEW_CHANNEL_ID, text=text)
    await bot.forward_message(chat_id=REVIEW_CHANNEL_ID, from_chat_id=message.chat.id, message_id=message.message_id)

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
    review_counter += 1
    save_counter(review_counter)

    await message.answer("‚úÖ –û—Ç–∑—ã–≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
